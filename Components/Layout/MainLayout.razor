@inherits LayoutComponentBase
@inject DashboardTrilhaEsporte.Domain.Service.FiltroStateService FiltroService

<MudThemeProvider Theme="@_theme" IsDarkMode="_isDarkMode" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>

    <MudDrawerContainer>

     

        <MudMainContent>

         
            <!-- Conteúdo principal -->
            <MudContainer Class="pt-4 pa-4 mt-2" Style="max-width: 100vw;" >
                @Body
            </MudContainer>

        </MudMainContent>
    </MudDrawerContainer>

</MudLayout>

<div id="blazor-error-ui" data-nosnippet>
    An unhandled error has occurred.
    <a href="." class="reload">Reload</a>
    <span class="dismiss">🗙</span>
</div>

@code {
    private bool _drawerOpen = true;
    private bool _isDarkMode = false;
    private MudTheme? _theme = null;
    private bool mostrarFiltro = true;


    protected override void OnInitialized()
    {
        base.OnInitialized();

        _theme = new MudTheme()
        {
            PaletteLight = _whitePalette,
            PaletteDark = _darkPalette,
            LayoutProperties = new LayoutProperties(),

            Typography = new Typography()
            {
                Default = new DefaultTypography()
                {
                    FontFamily = new[] { "Outfit", "sans-serif" },
                    FontWeight = "500",

                }
            }


        };
    }

    private void ToggleDrawer()
    {
        _drawerOpen = !_drawerOpen;
    }
    private void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private void DarkModeToggle()
    {
        _isDarkMode = !_isDarkMode;
    }

    private readonly PaletteLight _lightPalette = new()
    {
        Black = "#110e2d",
        AppbarText = "#424242",
        AppbarBackground = "rgba(255,255,255,0.8)",
        DrawerBackground = "#ffffff",
        GrayLight = "#e8e8e8",
        GrayLighter = "#f9f9f9",
    };

    private readonly PaletteDark _darkPalette = new()
    {
        Primary = "#7e6fff",
        Surface = "#f7f7f7",
        Background = "#1a1a27",
        BackgroundGray = "#151521",
        AppbarText = "#92929f",
        AppbarBackground = "rgba(26,26,39,0.8)",
        DrawerBackground = "#1a1a27",
        ActionDefault = "#74718e",
        ActionDisabled = "#9999994d",
        ActionDisabledBackground = "#605f6d4d",
        TextPrimary = "#b2b0bf",
        TextSecondary = "#92929f",
        TextDisabled = "#ffffff33",
        DrawerIcon = "#92929f",
        DrawerText = "#92929f",
        GrayLight = "#2a2833",
        GrayLighter = "#1e1e2d",
        Info = "#4a86ff",
        Success = "#3dcb6c",
        Warning = "#ffb545",
        Error = "#ff3f5f",
        LinesDefault = "#33323e",
        TableLines = "#33323e",
        Divider = "#292838",
        OverlayLight = "#1e1e2d80",

    };

    private readonly PaletteLight _whitePalette = new()
    {
        Primary = "#ff6f00", // Laranja vibrante como cor principal
        Surface = "#ffffff", 
        Background = "#f5f6fa", 
        BackgroundGray = "#f0f0f0", // Fundo cinza claro
        AppbarText = "#000000", // Texto preto para contraste
        AppbarBackground = "rgba(255,255,255,0.95)", // Appbar translúcida branca
        DrawerBackground = "#ffffff", // Drawer branco
        ActionDefault = "#333333", // Preto suave para ações
        ActionDisabled = "#cccccc80", // Texto desabilitado com transparência
        ActionDisabledBackground = "#e0e0e0", // Fundo desabilitado claro
        TextPrimary = "#2e2a31", // Texto primário preto
        TextSecondary = "#4a4a4a", // Texto secundário cinza escuro
        TextDisabled = "#00000033", // Texto desabilitado com transparência
        DrawerIcon = "#ff6f00", // Ícones em laranja
        DrawerText = "#000000", // Texto do drawer preto
        GrayLight = "#e0e0e0", // Cinza leve
        GrayLighter = "#f5f5f5", // Cinza mais leve
        Info = "#2196f3", // Azul para informação
        Success = "#43a047", // Verde para sucesso
        Warning = "#fb8c00", // Laranja queimado para aviso
        Error = "#e53935", // Vermelho para erro
        LinesDefault = "#dddddd", // Linhas padrão discretas
        TableLines = "#e0e0e0", // Linhas de tabela claras
        Divider = "#e0e0e0", // Divisores suaves
        OverlayLight = "#ffffffcc", // Overlay translúcido claro
    };


    public string DarkLightModeButtonIcon => _isDarkMode switch
    {
        true => Icons.Material.Rounded.AutoMode,
        false => Icons.Material.Outlined.DarkMode,
    };

    private void OnFiltroClick()
    {
        mostrarFiltro = !mostrarFiltro;
        FiltroService.ToggleFiltro();
        ScrollToTopAsync();
    }
    private async Task ScrollToTopAsync()
    {
        await JS.InvokeVoidAsync("window.scrollTo", 0, 0);
    }

    [Inject] IJSRuntime JS { get; set; }


}