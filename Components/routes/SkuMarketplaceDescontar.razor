@namespace DashboardTrilhaEsporte.Components.routes

@using DashboardTrilhaEsporte.Components.Layout;

@using DashboardTrilhaEsporte.Domain.DTOs
@using DashboardTrilhaEsporte.Enums
@using DashboardTrilhaEsporte.Domain.Service;

@inject IJSRuntime JS
@inject ISnackbar Snackbar

@code{

    [Parameter]
    public List<SkuMarketplaceDevolucaoDTO>? skuMarketplaceDevolucaoDTOs {get; set;}

   private async Task MostrarMensagemEIniciarDownload()
    {
        Snackbar.Add("Seu download começará em alguns segundos...", Severity.Success);

        // Dá tempo do UI atualizar
        await Task.Delay(1000); // pequeno atraso para a mensagem aparecer

        await BaixarSkuMarketplaceDescontarDTO();
    }

    private async Task BaixarSkuMarketplaceDescontarDTO()
    {
        Snackbar.Add("Seu download começará em alguns segundos...", Severity.Success);
    
        string fileName = $"DescontarHouver_{DateTime.Now:dd-MM-yyyy_HH-mm}.xlsx";
        await JS.InvokeVoidAsync("downloadFile", fileName);
         Snackbar.Add("Infelizmente não foi possível concluir o download", Severity.Error);


    }
    

}
@if(skuMarketplaceDevolucaoDTOs !=null){
<div class="table-container">
    
    <div class="mt-16" style="max-width: 100%; overflow-x: auto; box-shadow: 0 2px 8px rgba(0, 0, 0, 0.5); border-radius: 2%">
       <div class="mt-6 mb-5 mt-4" style="max-width: 100%;">
        <MudText Typo="Typo.h6" Align="Align.Center" Class="font-weight-bold mr-3 ">
            Tabela : Eventos de Devolução
        </MudText>
        <MudButton class="ml-2" Variant="Variant.Filled" Color="Color.Success" OnClick="MostrarMensagemEIniciarDownload">
            Baixar Tabela (Xlsx)
        </MudButton>
        </div>
       
       <MudTable Items="skuMarketplaceDevolucaoDTOs" Hover="true" SortLabel="Ordenar por"
          Elevation="0" AllowUnsorted="false" Bordered="true" Striped="true" FixedHeader="true">

        <HeaderContent>
            
            <MudTh Style="min-width: 150px; text-align: center;">
                <MudTableSortLabel T="SkuMarketplaceDevolucaoDTO" SortBy="x => x.numeroPedido">
                    Número Pedido
                </MudTableSortLabel>
            </MudTh>
            <MudTh Style="min-width: 120px; text-align: center;">
                <MudTableSortLabel T="SkuMarketplaceDevolucaoDTO" SortBy="x => x.valorPedido">
                    Valor Pedido
                </MudTableSortLabel>
            </MudTh>
            <MudTh Style="min-width: 120px; text-align: center;">
                <MudTableSortLabel T="SkuMarketplaceDevolucaoDTO" SortBy="x => x.valorFinal">
                    Valor Final
                </MudTableSortLabel>
            </MudTh>
            <MudTh Style="min-width: 150px; text-align: center;">
                <MudTableSortLabel T="SkuMarketplaceDevolucaoDTO" SortBy="x => x.tipoEvento">
                    Tipo Evento
                </MudTableSortLabel>
            </MudTh>
            <MudTh Style="min-width: 180px; text-align: center;">
                <MudTableSortLabel T="SkuMarketplaceDevolucaoDTO" SortBy="x => x.motivoDevolucao">
                    Motivo da Devolução
                </MudTableSortLabel>
            </MudTh>
            <MudTh Style="min-width: 200px; text-align: center;">
                <MudTableSortLabel T="SkuMarketplaceDevolucaoDTO" SortBy="x => x.motivoEntrada">
                    Tipo de Operação de Devolução
                </MudTableSortLabel>
            </MudTh>
            <MudTh Style="min-width: 160px; text-align: center;">
                <MudTableSortLabel T="SkuMarketplaceDevolucaoDTO" SortBy="x => x.converencia">
                    Situação de Entrada
                </MudTableSortLabel>
            </MudTh>
            <MudTh Style="min-width: 140px; text-align: center;">
                <MudTableSortLabel T="SkuMarketplaceDevolucaoDTO" SortBy="x => x.diferenca">
                    Diferença entre os valores
                </MudTableSortLabel>
            </MudTh>
            <MudTh Style="min-width: 140px; text-align: center;">
                <MudTableSortLabel T="SkuMarketplaceDevolucaoDTO" SortBy="x => x.dataPedido">
                    Data do Pedido
                </MudTableSortLabel>
            </MudTh>
            <MudTh Style="min-width: 140px; text-align: center;">
                <MudTableSortLabel T="SkuMarketplaceDevolucaoDTO" SortBy="x => x.dataCiclo">
                    Data do Ciclo
                </MudTableSortLabel>
            </MudTh>
        </HeaderContent>

        <RowTemplate>
          
            <MudTd DataLabel="Número Pedido" Style="text-align: center;">
                @context.numeroPedido
            </MudTd>
            <MudTd DataLabel="Valor Pedido" Style="text-align: center;">
                @context.valorPedido.ToString("C")
            </MudTd>
            <MudTd DataLabel="Valor Final" Style="text-align: center;">
                @context.valorFinal.ToString("C")
            </MudTd>
            <MudTd DataLabel="Tipo Evento" Style="text-align: center;">
                @context.tipoEvento.GetDescription()
            </MudTd>
            <MudTd DataLabel="Motivo da Devolução" Style="text-align: center;">
                @context.motivoDevolucao.GetDescription()
            </MudTd>
            <MudTd DataLabel="Tipo de Operação de Devolução" Style="text-align: center;">
                @context.motivoEntrada.GetDescription()
            </MudTd>
            <MudTd DataLabel="Situação de Entrada" Style="text-align: center;">
                @(context.converencia ? "OK" : "Devolvido com Defeito")
            </MudTd>
            <MudTd DataLabel="Diferença" Style=@($"text-align: center; color:{(context.diferenca > 0 ? "green" : "red")};")>
                @context.diferenca.ToString("C")
            </MudTd>
            <MudTd DataLabel="Data do Pedido" Style="text-align: center;">
                @context.dataPedido?.ToShortDateString()
            </MudTd>
            <MudTd DataLabel="Data do Ciclo" Style="text-align: center;">
                @context.dataCiclo?.ToShortDateString()
            </MudTd>
        </RowTemplate>

        <PagerContent>
            <MudTablePager PageSizeOptions="new int[] { 10, 25, 50 }" />
        </PagerContent>
</MudTable>

    </div>

</div>
}else{
     <MudProgressCircular Color="Color.Default" Indeterminate="true" />

}